r = 0
g = 0
b = 0
a = 0

function testPatternS()
    parent.stopAllTransitions()

    r, g, b, a = parent.getBackgroundColor()

    local angleDifference = 15
    local numberOfBullets = 10
    local radialBulletSpeed = 5.5

    parent.canBeDamaged = false
    local pos = viewportToWorld(0.77, 0.5)
    parent.moveCharacterTo(pos.x, pos.y, 0.75, "outCubic", true)
    parent.changeBackgroundScaleTo(1.2, 1.2, 1, "linear", false)
    parent.changeBackgroundColorTo(1, 0.349, 0.349, 0.529, 1, "linear", false)
    coroutine.yield(waitForScaledSecond("enemy", 2))

    parent.canBeDamaged = true

    parent.startSubpattern("leafFallPattern")

    local movement = { 
        { mode = "polar", startTime = 0, hasEndTime = false, limitSpeed = false, radialSpeed = radialBulletSpeed }
    }

    local currAngle = 0
    local dtheta = 360 / numberOfBullets

    while (true) do
        for i = 1, numberOfBullets do
            local origin = parent.getCharacterPos()
            local initPos = polar2cart(0.1, currAngle + dtheta * i) + origin
            parent.summonBullet(
                "LightBlueCircleBullet",
                initPos,
                origin,
                0,
                vector(1, 1),
                0.1,
                false,
                false,
                movement
            )
        end

        currAngle = currAngle + angleDifference
        coroutine.yield(waitForScaledSecond("enemy", 1.15))
    end
end

function leafFallPattern()
    local leafFall = { 
        { mode = "cart", startTime = 0, hasEndTime = false, limitSpeed = true, 
        velocity = vector(0, 0), minVelocity = vector(-1000000, -6), 
        accel = function(t) return vector(6 * math.log(t + 1, 10) * math.cos(math.pi * t), -2) end,
        faceToMovingDirection = false }
    }

    while (true) do
        local initPos = viewportToWorld(math.random(1, 99) / 100, 1.05)
        parent.summonBullet(
            "GreenLuminusBullet",
            initPos,
            initPos,
            0,
            vector(0.82, 0.82),
            0,
            false,
            false,
            leafFall
        )
        coroutine.yield(waitForScaledSecond("enemy", 0.22))
    end
end

function onPatternEnd()
    parent.changeBackgroundScaleTo(1, 1, 0.5, "linear", false)
    parent.changeBackgroundColorTo(r, g, b, a, 0.5, "linear", false)
end